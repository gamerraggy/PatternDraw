import pygame
pygame.init()

# Set up the display
screen = pygame.display.set_mode((1200, 800))
pygame.display.set_caption("Pattern Generator")

# Define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
BROWN = (139, 69, 19)  
RED = (255, 0, 0)
GREEN = (0, 255, 0)
ORANGE = (255, 128, 0)
YELLOW = (233, 240, 141)
PURPLE = (127, 0, 255)
BLUE = (121, 161, 224)
BLUER = (0, 2, 255)


# Starting settings
current_color = RED
current_shape = "triangle"
SHAPE_SIZE = 40

# List of shapes (each shape is: [x, y, size, color, type])
shapeList = []  # This will store all the shapes

# Initialize font for instructions
font = pygame.font.Font(None, 36)

# Main game loop
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

        # Check for key presses
        elif event.type == pygame.KEYDOWN:
            
            # Numbers to select the shape
            if event.key == pygame.K_1:
                current_shape = "ellipse"  # Select ellipse
            elif event.key == pygame.K_2:
                current_shape = "hexagon"  # Select hexagon
            elif event.key == pygame.K_3:
                current_shape = "triangle"  # Select triangle
            elif event.key == pygame.K_4:
                current_shape = "circle"  # Select circle
            elif event.key == pygame.K_5:
                current_shape = "square"  # Select square
            
            # Letters to select the color
            if event.key == pygame.K_r:
                current_color = RED  # Change to red
            elif event.key == pygame.K_g:
                current_color = GREEN  # Change to green
            elif event.key == pygame.K_b:
                current_color = BROWN  # Change to brown
            elif event.key == pygame.K_o:
                current_color = ORANGE  # Change to orange
            elif event.key == pygame.K_z:
                current_color = BLACK  # Change to black
            elif event.key == pygame.K_p:
                current_color = PURPLE  # Change to purple
            elif event.key == pygame.K_e:
                current_color = BLUER  # Change to bluer
                
                
        # Check for mouse click
        elif event.type == pygame.MOUSEBUTTONDOWN:
            mouse_x, mouse_y = pygame.mouse.get_pos()
            new_shape = [mouse_x, mouse_y, SHAPE_SIZE, current_color, current_shape]
            shapeList.append(new_shape)  # Add new shape to the list

    # Clear the screen
    screen.fill(BLUE)

    # Draw all shapes in the list
    for shape in shapeList:
        x = shape[0]
        y = shape[1]
        size = shape[2]
        color = shape[3]
        kind = shape[4]

        if kind == "ellipse":
            pygame.draw.ellipse(screen, color, (x - size, y - size // 4, size * 4, size))  # Ellipse dimensions
        elif kind == "hexagon":
            points = [
                (x, y - size),  # Top
                (x + size, y - size // 2),  # Top-right
                (x + size, y + size // 2),  # Bottom-right
                (x, y + size),  # Bottom
                (x - size, y + size // 2),  # Bottom-left
                (x - size, y - size // 2)   # Top-left
            ]
            pygame.draw.polygon(screen, color, points)
        elif kind == "triangle":
            points = [
                (x, y - size),           # Top point
                (x - size, y + size),    # Bottom-left point
                (x + size, y + size)     # Bottom-right point
            ]
            pygame.draw.polygon(screen, color, points)
        elif kind == "circle":
            pygame.draw.circle(screen, color, (x, y), size)  
        elif kind == "square":
            pygame.draw.rect(screen, color, (x - size // 7, y + size // 7, size, size)) 

    # Display instructions at the top
    instructions = font.render("1: Ellipse  2: Hexagon  3: Triangle  4: Circle  5: Square", True, WHITE)
    instructions2 = font.render("R: Red  G: Green  B: Brown  Z: BLACK E: BLUE P: PURPLE", True, BLACK)
    screen.blit(instructions, (1, 1))
    screen.blit(instructions2, (1, 50))

    # Update the screen
    pygame.display.flip()

pygame.quit()
